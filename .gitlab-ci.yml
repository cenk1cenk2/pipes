---
variables:
  LOG_LEVEL: trace
  GO_VERSION: 1.20-alpine

stages:
  - first-build
  - first-manifest
  - install
  - build
  - pre-publish
  - pre-manifest
  - publish
  - post

.docker-build-vanilla:
  variables:
    DOCKER_BUILDKIT: "1"
    GITLAB_CI_ARCH: amd64
    DOCKERFILE_NAME: Dockerfile
    DOCKERFILE_CONTEXT: .
    DOCKER_IMAGE_BUILD_ARGS: ""
  before_script:
    - cd $DOCKERFILE_CONTEXT
  script:
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    - docker build --pull -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAGS $DOCKER_IMAGE_BUILD_ARGS -f ${DOCKERFILE_NAME} .
    - docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAGS
  only:
    refs:
      - main
      - tags
  tags:
    - $GITLAB_CI_ARCH

.docker-manifest-vanilla:
  variables:
    DOCKER_BUILDKIT: "1"
  script:
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    - docker manifest create ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAGS} ${DOCKER_IMAGE_AMEND_TAGS}
    - docker manifest push --purge $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAGS
  only:
    refs:
      - main
      - tags
  tags:
    - docker

include:
  - project: devops/pipes
    file: /templates/v2/workflow.gitlab-ci.yml
  - project: devops/pipes
    file: /templates/v2/go.gitlab-ci.yml
  - project: devops/pipes
    file: /templates/v2/docker-build-dockerhub.gitlab-ci.yml
  - project: devops/pipes
    file: /templates/v2/update-docker-hub-readme.gitlab-ci.yml
  - project: devops/pipes
    file: /templates/v2/docker-manifest-dockerhub.gitlab-ci.yml

docker-build-first_go:
  extends: .docker-build-vanilla
  stage: first-build
  variables:
    DOCKERFILE_CONTEXT: ./go
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-go
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: ${GO_VERSION}-${GITLAB_CI_ARCH}
        DOCKER_IMAGE_BUILD_ARGS: --build-arg=GO_VERSION=${GO_VERSION}
        DOCKERFILE_NAME: Dockerfile-alpine
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  only:
    changes:
      - "go/**/*"
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-manifest-first_go:
  extends: .docker-manifest-vanilla
  stage: first-manifest
  parallel:
    matrix:
      - DOCKER_IMAGE_NAME: cenk1cenk2/pipe-go
        DOCKER_IMAGE_TAGS: 1.20-alpine
        DOCKER_IMAGE_AMEND_TAGS: "-a cenk1cenk2/pipe-go:1.20-alpine-amd64 -a cenk1cenk2/pipe-go:1.20-alpine-arm64"
  only:
    changes:
      - "go/**/*"
      - .gitlab-ci.yml
    refs:
      - main
      - tags

install:
  extends: .go-install
  stage: install

lint:
  extends: .go-lint
  stage: build

build:
  extends: .go-build
  stage: build
  variables:
    GO_BUILD_COMMAND: $PIPE:build
  artifacts:
    paths:
      - "./*/dist/"
  parallel:
    matrix:
      - PIPE: template
      - PIPE: docker
      - PIPE: gh-release-tracker
      - PIPE: node
      - PIPE: gl-artifacts
      - PIPE: markdown-toc
      - PIPE: update-docker-hub-readme
      - PIPE: semantic-release
      - PIPE: select-env
      - PIPE: s3-upload

# to stop depending on itself

docker-build-first_docker:
  extends: .docker-build-vanilla
  stage: pre-publish
  variables:
    DOCKERFILE_CONTEXT: ./docker
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-docker
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - build
  only:
    changes:
      - "common/**/*"
      - "docker/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-manifest-first_docker:
  extends: .docker-manifest-vanilla
  stage: pre-manifest
  variables:
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-docker
    DOCKER_IMAGE_TAGS: latest
    DOCKER_IMAGE_AMEND_TAGS: "-a cenk1cenk2/pipe-docker:latest-amd64 -a cenk1cenk2/pipe-docker:latest-arm64"
  dependencies: []
  only:
    changes:
      - "common/**/*"
      - "docker/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

# private images

# public images

docker-build_docker:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./docker
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-docker
    DOCKER_MANIFEST_TARGET: latest
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - "build: [docker]"
  only:
    changes:
      - "common/**/*"
      - "docker/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_gl-artifacts:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./gl-artifacts
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-gl-artifacts
    DOCKER_MANIFEST_TARGET: latest
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - "build: [gl-artifacts]"
  only:
    changes:
      - "common/**/*"
      - "gl-artifacts/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_go:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./go
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-go
    DOCKER_IMAGE_BUILD_ARGS: GO_VERSION=${GO_VERSION}
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: ${GO_VERSION}-${GITLAB_CI_ARCH}
        DOCKER_MANIFEST_TARGET: ${GO_VERSION}
        DOCKERFILE_NAME: Dockerfile-alpine
        GO_VERSION:
          - 1.20-alpine
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies: []
  only:
    changes:
      - "go/**/*"
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_node:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./node
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-node
    DOCKER_MANIFEST_TARGET: ${NODE_VERSION}
    DOCKER_IMAGE_BUILD_ARGS: NODE_VERSION=${NODE_VERSION}
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: ${NODE_VERSION}-${GITLAB_CI_ARCH}
        NODE_VERSION:
          - 16
          - 16-alpine
          - 18
          - 18-alpine
          - 20
          - 20-alpine
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - "build: [node]"
  only:
    changes:
      - "common/**/*"
      - "select-env/**/*"
      - "node/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_gh-release-tracker:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./gh-release-tracker
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-gh-release-tracker
    DOCKER_MANIFEST_TARGET: latest
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - "build: [gh-release-tracker]"
  only:
    changes:
      - "common/**/*"
      - "gh-release-tracker/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_markdown-toc:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./markdown-toc
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-markdown-toc
    DOCKER_MANIFEST_TARGET: latest
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - "build: [markdown-toc]"
  only:
    changes:
      - "common/**/*"
      - "markdown-toc/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_select-env:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./select-env
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-select-env
    DOCKER_MANIFEST_TARGET: latest
  dependencies:
    - "build: [select-env]"
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  only:
    changes:
      - "common/**/*"
      - "select-env/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_semantic-release:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./semantic-release
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-semantic-release
    DOCKER_MANIFEST_TARGET: latest
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - "build: [semantic-release]"
  only:
    changes:
      - "common/**/*"
      - "select-env/**/*"
      - "node/**/*"
      - "semantic-release/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags

docker-build_update-docker-hub-readme:
  extends: .docker-build-dockerhub
  stage: publish
  variables:
    DOCKERFILE_CONTEXT: ./update-docker-hub-readme
    DOCKER_IMAGE_NAME: cenk1cenk2/pipe-update-docker-hub-readme
    DOCKER_MANIFEST_TARGET: latest
  parallel:
    matrix:
      - DOCKER_IMAGE_TAGS: latest-${GITLAB_CI_ARCH}
        GITLAB_CI_ARCH:
          - amd64
          - arm64
  dependencies:
    - "build: [update-docker-hub-readme]"
  only:
    changes:
      - "common/**/*"
      - "update-docker-hub-readme/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - main
      - tags
#
# publish-s3-upload:
#   extends: .publish-docker-to-public
#   variables:
#     DOCKERFILE_CONTEXT: ./s3
#     DOCKER_IMAGE_NAME: cenk1cenk2/pipe-s3
#     DOCKER_IMAGE_TAGS: latest
#     PARENT_DOWNLOAD_ARTIFACTS: "build: [s3]"
#     parallel:
#       matrix:
#         - DOCKER_IMAGE_TAGS: latest-amd64
#           GITLAB_CI_ARCH: amd64
#         - DOCKER_IMAGE_TAGS: latest-arm64
#           GITLAB_CI_ARCH: arm64
#   only:
#     changes:
#       - "common/**/*"
#       - "s3/**/*"
#       - go.mod
#       - go.sum
#       - .gitlab-ci.yml
#     refs:
#       - main
#       - tags
#
docker-manifest:
  extends: .docker-manifest-dockerhub
  stage: post
  dependencies:
    - docker-build_docker
    - docker-build_gl-artifacts
    - docker-build_go
    - docker-build_node
    - docker-build_gh-release-tracker
    - docker-build_markdown-toc
    - docker-build_select-env
    - docker-build_semantic-release
    - docker-build_update-docker-hub-readme
  only:
    refs:
      - main
      - tags

update-docker-hub-readme:
  extends: .update-docker-hub-readme
  stage: post
  dependencies: []
  variables:
    README_MATRIX: |
      [
        {
          "repository": "cenk1cenk2/pipe-docker",
          "file": "./docker/README.md",
          "description": "Builds and publishes a Docker image with given conditions."
        },
        {
          "repository": "cenk1cenk2/pipe-gl-artifacts",
          "file": "./gl-artifacts/README.md",
          "description": "Fetches artifacts from a stage in GitLab pipeline."
        },
        {
          "repository": "cenk1cenk2/pipe-node",
          "file": "./node/README.md",
          "description": "Node.JS operations for pipelines."
        },
        {
          "repository": "cenk1cenk2/pipe-gh-release-tracker",
          "file": "./gh-release-tracker/README.md",
          "description": "Tracks a GitHub repository and fetches the latest tag."
        },
        {
          "repository": "cenk1cenk2/pipe-go",
          "file": "./go/README.md",
          "description": "GoLang operations for pipelines."
        },
        {
          "repository": "cenk1cenk2/pipe-markdown-toc",
          "file": "./markdown-toc/README.md",
          "description": "Generates TOC for markdown files."
        },
        {
          "repository": "cenk1cenk2/pipe-update-docker-hub-readme",
          "file": "./update-docker-hub-readme/README.md",
          "description": "Updates the README on DockerHub for given repository."
        },
        {
          "repository": "cenk1cenk2/pipe-semantic-release",
          "file": "./semantic-release/README.md",
          "description": "Semantic-Release embedded inside a container for CI jobs."
        },
        {
          "repository": "cenk1cenk2/pipe-select-env",
          "file": "./select-env/README.md",
          "description": "Selects an environment given on the conditions."
        }
      ]
