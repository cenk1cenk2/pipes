stages:
  - install
  - build
  - publish

.publish-docker-common:
  stage: publish
  before_script:
    - cd ./docker
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE .
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE
  tags:
    - docker

.publish-node-common:
  stage: publish
  before_script:
    - cd ./node
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE --build-arg NODE_VERSION=${NODE_VERSION} .
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE
  tags:
    - docker

.publish-gl-artifacts-common:
  stage: publish
  before_script:
    - cd ./gl-artifacts
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE .
    - docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/$CONTAINER_IMAGE
  tags:
    - docker

variables:
  PARENT_PIPELINE_ID: $CI_PIPELINE_ID
  CI_DEBUG_TRACE: "true"

cache:
  paths:
    - vendor/
  key: ${CI_COMMIT_REF_SLUG}

install:
  stage: install
  image: golang:alpine
  script:
    - apk add --no-cache --no-progress make
    - make install
  artifacts:
    paths:
      - vendor/
    expire_in: 30 minutes
  tags:
    - docker

build:
  stage: build
  image: golang:alpine
  before_script:
    - cd ${APP_FOLDER}
  script:
    - apk add --no-cache --no-progress make
    - make -j4 build
    - ./dist/${APP_BINARY} --help
  artifacts:
    paths:
      - ${APP_FOLDER}/dist/
    expire_in: 30 minutes
  parallel:
    matrix:
      - APP_FOLDER: ./docker
        APP_BINARY: ws-pipes-docker

      - APP_FOLDER: ./node
        APP_BINARY: ws-pipes-node

      - APP_FOLDER: ./gl-artifacts
        APP_BINARY: ws-pipes-gl-artifacts
  tags:
    - docker

publish-docker:
  extends: .publish-docker-common
  parallel:
    matrix:
      - APP_BINARY: ws-pipes-docker
        CONTAINER_IMAGE: ws-pipes-docker:latest
  only:
    changes:
      - "docker/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - master
      - main

publish-node:
  extends: .publish-node-common
  parallel:
    matrix:
      - CONTAINER_IMAGE: ws-pipes-node:${NODE_VERSION}
        NODE_VERSION:
          - 16
          - 16-alpine
  only:
    changes:
      - "node/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - master
      - main

publish-gl-artifacts:
  extends: .publish-gl-artifacts-common
  parallel:
    matrix:
      - CONTAINER_IMAGE: ws-pipes-gl-artifacts:latest
  only:
    changes:
      - "gl-artifacts/**/*"
      - go.mod
      - go.sum
      - .gitlab-ci.yml
    refs:
      - master
      - main
